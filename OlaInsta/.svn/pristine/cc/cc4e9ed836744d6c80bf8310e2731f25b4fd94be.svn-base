package com.ola.insta;

import java.util.ArrayList;
import java.util.Locale;
import android.annotation.SuppressLint;
import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.Intent;
import android.location.Location;
import android.os.Bundle;
import android.speech.RecognizerIntent;
import android.support.v7.app.ActionBarActivity;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.Toast;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.BitmapDescriptorFactory;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;
import com.ola.insta.common.Constants;
import com.ola.insta.location.MyLocationManager;

public class BookingAcivity extends ActionBarActivity implements
		OnClickListener {
	private GoogleMap mMap;
	private Context context;

	protected int getLayoutId() {
		return R.layout.fragment_voice_booking;
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(getLayoutId());
		context = BookingAcivity.this;
		init();
	}

	@Override
	protected void onResume() {
		super.onResume();
	}

	private ImageButton btnSpeak;
	private final int REQ_CODE_SPEECH_INPUT = 100;

	@SuppressLint("NewApi")
	private void init() {

		/*
		 * getWindow().setFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS
		 * , WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
		 */

		mMap = ((SupportMapFragment) getSupportFragmentManager()
				.findFragmentById(R.id.map)).getMap();

		new MyLocationManager(context,
				new MyLocationManager.LocationCallback() {

					@Override
					public void onError() {
						// TODO Auto-generated method stub
					}

					@Override
					public void onConnect(Location location) {
						// TODO Auto-generated method stub

						LatLng latLng = new LatLng(location.getLatitude(),
								location.getLongitude());

						MarkerOptions opts = new MarkerOptions();
						opts.position(latLng);
						opts.icon(BitmapDescriptorFactory
								.fromResource(R.drawable.marker));
						opts.title("Test Title");
						opts.snippet("Summary");

						mMap.addMarker(opts);
						mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(
								latLng, Constants.DEFAULT_ZOOM));
					}
				});

		btnSpeak = (ImageButton) findViewById(R.id.btnSpeak);

		btnSpeak.setOnClickListener(this);
	}

	/**
	 * Showing google speech input dialog
	 * */
	private void promptSpeechInput() {
		Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
		intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
				RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
		intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, Locale.getDefault());
		intent.putExtra(RecognizerIntent.EXTRA_PROMPT,
				getString(R.string.speech_prompt));
		try {
			startActivityForResult(intent, REQ_CODE_SPEECH_INPUT);
		} catch (ActivityNotFoundException a) {
			Toast.makeText(getApplicationContext(),
					getString(R.string.speech_not_supported),
					Toast.LENGTH_SHORT).show();
		}
	}

	/**
	 * Receiving speech input
	 * */
	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);

		switch (requestCode) {
		case REQ_CODE_SPEECH_INPUT: {
			if (resultCode == RESULT_OK && null != data) {

				ArrayList<String> result = data
						.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
				for (String string : result) {
					if (string.equalsIgnoreCase(Constants.VOICE_MESSAGE)) {
						Toast.makeText(
								getApplicationContext(),
								getApplicationContext().getString(
										R.string.cab_booked),
								Toast.LENGTH_SHORT).show();
						startActivity(new Intent(getApplicationContext(),
								MainActivity.class));
						finish();
					} else
						Toast.makeText(
								getApplicationContext(),
								getApplicationContext().getString(
										R.string.speech_try_again),
								Toast.LENGTH_SHORT).show();
				}
			}
			break;
		}

		}
	}

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		switch (v.getId()) {
		case R.id.btnSpeak:
			promptSpeechInput();
			break;

		default:
			break;
		}
	}

}
